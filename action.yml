
name: 'Spectra'
description: 'Smart Contract Vulnerability Scanner'

inputs:
  target:  # id of input
    description: 'target to scan'
    required: false
    default: '.'
    type: string

  mode:
    description: 'scan mode'
    required: true
    type: string

outputs:
# each output : < 1 MB, output total : < 50 MB
  result: # id of output
    description: 'random number'
    value: ${{ steps.random-number-generator.outputs.random-number }}

  scan-result:
    description: 'scan result'
    value: ${{ steps.scan-result.outputs.scan-result }}

runs:
  using: 'composite'
  steps:

    - id: scan
      run: ${{ github.action_path }}/entrypoint.sh ${{ inputs.mode }}
      shell: bash

    - run: echo "::set-output name=scan-result::$(cat result.sarif)"
      shell: bash

    - id: scan-result
      #run: echo "::set-output name=scan-result::$(cat result.sarif)"
      run: echo "::set-output name=scan-result::result.sarif"
      shell: bash
  
    - name: upload result
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: result.sarif
        category: Spectra

    - name: send result
      run: 'curl -X POST --data-binary "@result.sarif" -H "content-type: application/json" "https://postman-echo.com/post" | jq'
      shell: bash

    - id: random-number-generator
      run: echo "::set-output name=random-number::$(echo $RANDOM)"
      shell: bash

branding:
  icon: 'shield'
  color: 'blue'
